Q1. Battleground

A war has been declared between the countries of Geekyland1 and Geekyland2. The former’s army has already occupied the battleground, which is an N * N grid. Only one soldier can stay in a single square. Each soldier is denoted by an uppercase English alphabet. However, it is suspected that three Geekyland2 spies have infiltrated into the battleground as soldiers. Intelligence reports suggest that if any such infiltration has happened, the three spies are in a single line (a line can be horizontal, vertical, or diagonal).

You have to determine the number of triplets of soldiers that may correspond to the Geekyland2 spies, i.e. they lie on the same line.

Input:
The first line of input contains T denoting the number of testcases. T testcases follow. Each testcase contains N+1 lines of input. The first line contains N, and the next N lines contain N space-separated characters – uppercase English letters and the character ‘.’, which denotes an empty square. Each letter can appear only once in the grid.

Output:
For each testcase, in a new line, print the number of triplets that may correspond to the spies.

Constraints:
1 <= T <= 100
1 <= N <= 200

Examples:
Input:
2
4
...P
..Q.
.R..
S...
3
ABF
.CD
..E
Output:
4
3

Explanation:
Testcase 1: There are 4 spies so number of triplets that can be made are 4.
Testcase 2: ABF has 1 triplet, ACE has 1 triplet, FDE has 1 triplet, so the answer is 1+1+1=3

Solution:-







Q2. Food Fest

Vikrant is at his college’s fest, and being a true foodie, he went straight away to the food corner in hope of getting his hands on some delicacies. There are N stalls in the food corner numbered 1 to N, and the ith stall has Ai people standing in front of it. Each stall takes a minute to serve one person. Vikrant will initially join the line for the first stall, but being an impatient guy, he will go on to join the line for the next stall after every minute if he is not served. (If he is in the line for the last stall, he will join the one for the first stall)

You have to tell the food stall from which Vikrant will be served.

Input:
The first line of the input contains T denoting the number of testcases. Each testcase contains two lines of input.
The first line of each testcase consists of a positive integer N. The second line consists of N positive integers A1, A2, …, AN separated by spaces.

Output:
For each testcase, in a new line, print the food-stall that will serve Vikrant.

Constraints:
1 ≤ T ≤ 100
1 ≤ N ≤ 105
0 ≤ Ai ≤ 106

Examples:
Input:
2
4
1 4 2 1
2
4 4
Output:
3
1

Explanation:
Testcase 1: At T = 0, he stands at stall 1, it is occupied till T=1 so he moves so stall 2, where he waits for 1 minute after which he moves to stall 3 at T = 2, which is empty at that point since the 2 people waiting at that stall are already serves by T = 2, so he gets serves at this stall.
Testcase 2: The progression is explained by the states given below.
4 4 T=0
3 3 T=1
2 2 T=2
1 1 T=3
0 0 T=4

Solution:-

#include <stdio.h>
#include <stdlib.h>

int whichStall(int stall[], int n) {
	int vikrant_pos = 0;
	while(1) {
		if(vikrant_pos >= n) {
			vikrant_pos = 0;
		}
		// vikrant is 1st in queue
		if(stall[vikrant_pos] == 0) {
			return (vikrant_pos + 1);
		}
		// every stall serve 1 people in queue
		for(int i = 0; i < n; i++) {
			if(stall[i] != 0) {
				stall[i]--;
			}
		}
		vikrant_pos++;	// vikrant move to next stall
	}
}

int main() {
	int t;
	scanf("%d", &t);
	while(t--) {
		int n;
		scanf("%d", &n);
		int stall[n];
		for(int i = 0; i < n; i++) {
			scanf("%d", &stall[i]);
		}
		printf("%d\n", whichStall(stall, n));
	}
	return 0;
}